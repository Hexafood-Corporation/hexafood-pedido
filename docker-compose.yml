  version: '3.8'
  services:
    postgres:
      image: postgres:13-alpine
      container_name: 'hexafood-postgres-pedido'
      ports:
        - 5432:5432
      env_file:
        - .env.dev
      volumes:
        - postgres:/var/lib/postgresql/data
      networks:
        - hexafood-bridge
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U userpg -d hexafood"]
        interval: 10s
        timeout: 5s
        retries: 5

    api-pedido:
      container_name: 'hexafood-api-pedido'
      build:
        context: .
        dockerfile: Dockerfile
        args:
          - NODE_ENV=development
      env_file:
        - .env.dev
      networks:
        - hexafood-bridge
      ports:
        - 3000:3000
      depends_on:
        - postgres
      links:
        - postgres:postgres
      command: ["./wait-for-it.sh", "postgres:5432", "--", "./start.sh"]
      volumes:
        - .:/home/node/app
        - /home/node/app/node_modules
    localstack:
      image: localstack/localstack:latest
      ports:
        - '4566-4597:4566-4597'
      environment:
        - AWS_ACCESS_KEY_ID=dummy
        - AWS_SECRET_ACCESS_KEY=dummy
        - AWS_DEFAULT_REGION=us-east-1
        - DEBUG=1
        - LOCALSTACK_PERSISTENCE=1
        - SERVICES=sqs
        - DEFAULT_REGION=us-east-1
        - EDGE_PORT=4566
        - SQS_ENDPOINT_STRATEGY=path
        - HOSTNAME_EXTERNAL=localstack
      volumes:
        - "./docker-compose/localstack:/var/lib/localstack"
        - ./docker-compose/start-localstack.sh:/etc/localstack/init/ready.d/start-localstack.sh

      networks:
        - hexafood-bridge

  networks:
    hexafood-bridge:
      driver: bridge

  volumes:
    postgres:
